##
 # Tests SConstcipt files
 #
 ##
Import('default_env')
env = default_env.Clone()

#TODO move to normal debug\release modes

#debugcflags = ['-W1', '-GX', '-EHsc', '-D_DEBUG', '/MDd']   #extra compile flags for debug
#releasecflags = ['-O2', '-EHsc', '-DNDEBUG', '/MD']         #extra compile flags for release
#env.Append(CCFLAGS='-g')


#Configure environment to create tests
test_sources = [
    "tests.cc",
	#"test_Console.cc",	
	"test_StringUtils.cc",
	"test_PathUtils.cc",
	"test_ModelObjects.cc",
	"test_NoMySqlUserAPI.cc",
	"test_Authentication.cc",
    "test_SQLiteProvider_Assignments.cc",
	"test_SQLiteProvider_Connection.cc",
	"test_SQLiteProvider_Directories.cc",
	"test_SQLiteProvider_TypeTables.cc",
	"test_SQLiteProvider_Variations.cc",
	"test_TimeProvider.cc",
	]
	
#Read user flag for using mysql dependencies or not
if ARGUMENTS.get("mysql","no")=="yes" or ARGUMENTS.get("with-mysql","true")=="true":
	#User wants mysql!
	print("Compiling unit tests with MySQL")
	#model and provider
	test_sources.extend([
	"test_MySQLProvider_Assignments.cc",
	"test_MySQLProvider_Connection.cc",
	"test_MySQLProvider.cc",
	"test_MySQLProvider_Directories.cc",
	"test_MySQLProvider_Other.cc",
	"test_MySQLProvider_RunRanges.cc",
	"test_MySQLProvider_TypeTables.cc",
	"test_MySQLProvider_Variations.cc"])
	env.Append(CPPDEFINES='CCDB_MYSQL')
	env.ParseConfig('mysql_config --libs --cflags')
	

#Making tests
ccdb_tests_program = env.Program('test_ccdb_lib', source = test_sources, LIBS=["ccdb"], LIBPATH='#lib')
ccdb_tests_install = env.Install('#bin', ccdb_tests_program)
